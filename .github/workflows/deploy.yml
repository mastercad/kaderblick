name: Deploy to Alfahosting

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Prepare new release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PLESK_HOST }}
          username: ${{ secrets.PLESK_USERNAME }}
          password: ${{ secrets.PLESK_PASSWORD }}
          script: |
            # Vorbereitung des Release-Verzeichnisses
            RELEASE_DIR="/var/www/vhosts/byte-artist.de/releases/$(date +%Y%m%d_%H%M%S)"
            mkdir -p $RELEASE_DIR
            
            # Symlink für aktuelle Version
            CURRENT_DIR="/var/www/vhosts/byte-artist.de/kaderblick.byte-artist.de"
            
            # Kopiere wichtige Konfigurationen vom aktuellen Release
            if [ -d "$CURRENT_DIR" ]; then
              cp -r $CURRENT_DIR/app/.env* $RELEASE_DIR/
              cp -r $CURRENT_DIR/app/config/secrets $RELEASE_DIR/config/
              cp -r $CURRENT_DIR/app/config/jwt $RELEASE_DIR/config/
            fi
            
            echo $RELEASE_DIR > /tmp/current_release

      - name: Deploy to new directory
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PLESK_HOST }}
          username: ${{ secrets.PLESK_USERNAME }}
          password: ${{ secrets.PLESK_PASSWORD }}
          source: "docker-compose.yml,.docker/,app/"
          target: "/tmp/current_release"
          
      - name: Build and test new release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PLESK_HOST }}
          username: ${{ secrets.ROOT_USER }}
          password: ${{ secrets.ROOT_PASSWORD }}
          script: |
            RELEASE_DIR=$(cat /tmp/current_release)
            cd $RELEASE_DIR
            
            # Build in isolation
            docker compose -p staging up -d --build
            
            # Konfiguration und Tests
            docker compose -p staging exec -T api composer install --no-dev --optimize-autoloader
            docker compose -p staging exec -T api bin/console doctrine:migrations:migrate --no-interaction --env=prod
            
            # Wenn alles erfolgreich, dann Symlink aktualisieren
            if [ $? -eq 0 ]; then
              ln -sfn $RELEASE_DIR /var/www/vhosts/byte-artist.de/kaderblick.byte-artist.de
              
              # Alte Container stoppen und neue starten
              docker compose down
              docker compose -p production up -d
              
              # Alte Releases aufräumen (behalte die letzten 3)
              cd /var/www/vhosts/byte-artist.de/releases
              ls -t | tail -n +4 | xargs rm -rf
            else
              docker compose -p staging down
              rm -rf $RELEASE_DIR
              exit 1
            fi
