name: Deploy to Alfahosting

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Generate release directory name
        id: release
        run: echo "dir=/var/www/vhosts/byte-artist.de/kaderblick.byte-artist.de/releases/$(date +%Y%m%d_%H%M%S)" >> $GITHUB_OUTPUT
      
      - name: Prepare files
        run: |
          mkdir -p build
          cp -r docker-compose.yml docker-compose.db.yml .docker app build/
          
      - name: Deploy and switch
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PLESK_HOST }}
          username: ${{ secrets.ROOT_USER }}
          password: ${{ secrets.ROOT_PASSWORD }}
          script: |
            set -e
            RELEASE_DIR="${{ steps.release.outputs.dir }}"
            CURRENT_DIR="/var/www/vhosts/byte-artist.de/kaderblick.byte-artist.de"
            
            # Nur prod secrets und jwt kopieren
            mkdir -p "$RELEASE_DIR/app/config/secrets/prod"
            mkdir -p "$RELEASE_DIR/app/config/jwt"
            
            if [ -d "$CURRENT_DIR" ]; then
              [ -d "$CURRENT_DIR/app/config/secrets/prod" ] && \
                cp -r "$CURRENT_DIR/app/config/secrets/prod/"* "$RELEASE_DIR/app/config/secrets/prod/"
              
              [ -d "$CURRENT_DIR/app/config/jwt" ] && \
                cp -r "$CURRENT_DIR/app/config/jwt/"* "$RELEASE_DIR/app/config/jwt/"
            fi
            
            chmod -R 755 "$RELEASE_DIR"
            chown -R kaderblick-ftp-admin:psacln "$RELEASE_DIR"

      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PLESK_HOST }}
          username: ${{ secrets.PLESK_USERNAME }}
          password: ${{ secrets.PLESK_PASSWORD }}
          source: "build/*"
          target: "${{ steps.release.outputs.dir }}"
          strip_components: 1

      - name: Activate release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PLESK_HOST }}
          username: ${{ secrets.ROOT_USER }}
          password: ${{ secrets.ROOT_PASSWORD }}
          script: |
            set -e
            cd "${{ steps.release.outputs.dir }}"

            # erstelle im bedarfsfall netzwerk
            docker network inspect kaderblick-net >/dev/null 2>&1 || docker network create kaderblick-net

            # baue und starte im bedarfsfall db container
            if docker ps --filter "name=kaderblick-db" --filter "status=running" | grep -q kaderblick-db; then
              echo "DB Container läuft"
            else
              docker volume inspect kaderblick-db-data || docker volume create kaderblick-db-data
              docker compose -f docker-compose.db.yml -p production up -d --build --force-recreate db
            fi
            
            # Alte Staging-Container stoppen und entfernen
            echo "Stoppe und entferne alten staging"
            docker compose -p staging down --remove-orphans api vue-frontend

            # Build und Test mit uniquen Container-Namen
            echo "Starte neuen Staging für vorbereitungen"
            PMA_PORT=18081 API_PORT=18000 VUE_PORT=18080 docker compose -p staging up -d --build --force-recreate api vue-frontend
            echo "Starte composer install"
            docker compose -p staging exec -T api composer install --no-dev --optimize-autoloader
            echo "Starte migrations"
            docker compose -p staging exec -T api bin/console doctrine:migrations:migrate --no-interaction --env=prod
            
            # Vor Aktivierung alte Production-Container stoppen
            echo "Stoppe aktuelle production"
            docker compose -p production down --remove-orphans api vue-frontend

            # Aktivierung
            echo "Verlinke aktuellen Release ordner mit current"
            ln -sfn "${{ steps.release.outputs.dir }}" /var/www/vhosts/byte-artist.de/kaderblick.byte-artist.de/current
            
            echo "Setze Rechte für current"
            chown -r kaderblick-ftp-admin:psacln /var/www/vhosts/byte-artist.de/kaderblick.byte-artist.de/current

            # Neue Production starten
            echo "geht in current"
            cd /var/www/vhosts/byte-artist.de/kaderblick.byte-artist.de/current
            echo "starte production"
            docker compose -p production up -d --force-recreate api vue-frontend

            # Cleanup
            cd ../releases && ls -t | tail -n +4 | xargs rm -rf
