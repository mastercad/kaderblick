{% extends 'base.html.twig' %}

{% block title %}Spieldetails{% endblock %}

{% block body %}
<div class="container py-4">
    <a href="{{ path('games_index') }}" class="btn btn-link mb-3"><i class="fas fa-arrow-left me-1"></i> Zurück zur Übersicht</a>
    <div class="card mb-4">
        <div class="card-body">
            <h2 class="card-title mb-3">
                <strong>{{ game.homeTeam.name }}</strong> vs <strong>{{ game.awayTeam.name }}</strong>
            </h2>
            <div class="mb-2">
                <span class="me-3">
                    <i class="fas fa-calendar-alt"></i>
                    {{ calendarEvent.startDate|date('d.m.Y H:i') }}
                    {% if calendarEvent.endDate %} - {{ calendarEvent.endDate|date('H:i') }}{% endif %}
                </span>
                {% if game.location %}
                    <span class="me-3"><i class="fas fa-map-marker-alt"></i> {{ game.location.name }}</span>
                {% endif %}
            </div>
            <div class="mb-2">
                {% if homeScore is not null and awayScore is not null %}
                    <span class="badge bg-primary fs-5">{{ homeScore }} : {{ awayScore }}</span>
                {% else %}
                    <span class="badge bg-secondary">Noch kein Ergebnis</span>
                {% endif %}
            </div>
            {% set now = "now"|date('U') %}
{#            {% if calendarEvent.startDate and calendarEvent.endDate and now >= calendarEvent.startDate|date('U') and now <= calendarEvent.endDate|date('U') %} #}
            {% if calendarEvent.startDate and calendarEvent.endDate and now >= calendarEvent.startDate|date('U') %}
                <div class="mt-3">
                    <a href="/game/{{ calendarEvent.game.id }}/events" class="btn btn-success" target="_blank">
                        <i class="fas fa-futbol me-1"></i>Spielereignis erfassen
                    </a>
                </div>
            {% endif %}
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">Spielereignisse</h5>
        </div>
        <div class="card-body">
            {% if gameEvents|length > 0 %}
                <ul class="list-group list-group-flush">
                    {% for event in gameEvents %}
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>
                                {% set minutes = (event.timestamp.timestamp - calendarEvent.startDate.timestamp) / 60 %}
                                <span class="badge bg-light text-dark me-2">{{ minutes }}</span>
                                <strong>{{ event.gameEventType.name }}</strong>
                                {% if event.player %} - {{ event.player.fullName }}{% endif %}
                                {% if event.description %}<span class="text-muted ms-2">{{ event.description }}</span>{% endif %}
                            </span>
                            <div class="event-video-links">
                            {% if videos and videos[event.id] is defined %}
                                {% for cameraId, videoLinks in videos[event.id] %}
                                    {% for videoLink in videoLinks %}
                                        <a href="{{ videoLink }}" target="_blank"><i class="fas fa-video me-1" ></i>{{ cameras[cameraId].name }}</a>
                                    {% endfor %}
                                {% endfor %}
                            {% endif %}
                            </div>
                        </li>
                    {% endfor %}
                </ul>
            {% else %}
                <div class="text-muted">Keine Ereignisse für dieses Spiel.</div>
            {% endif %}
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Videos</h5>
            <button class="btn btn-primary btn-sm" id="addVideoBtn">
                <i class="fas fa-plus"></i> Video hinzufügen
            </button>
        </div>
        <div class="card-body" id="videos_list">
            {% if game.videos|length > 0 %}
                {% for video in game.videos %}
                    <div class="video-block mb-4 d-flex align-items-center">
                        <a href="https://www.youtube.com/watch?v={{ video.youtubeId }}" target="_blank">
                                <img src="https://img.youtube.com/vi/{{ video.youtubeId }}/hqdefault.jpg" alt="Video Thumbnail" class="img-fluid me-3" style="max-width: 120px;">
                        </a>
                        <div class="flex-grow-1">
                                <div><strong>{{ video.name }}</strong></div>
                                <div class="text-muted small">{{ video.url }}</div>
                        </div>
                        <button class="btn btn-outline-secondary btn-sm ms-2 edit-video-btn" 
                                data-video-id="{{ video.id }}"
                                data-video-name="{{ video.name }}"
                                data-video-url="{{ video.url }}"
                                data-video-file-path="{{ video.filePath }}"
                                data-video-game-start="{{ video.gameStart }}"
                                data-video-sort="{{ video.sort }}"
                                data-video-camera="{{ video.camera.id }}"
                                data-video-type="{{ video.videoType.id }}"
                                data-video-length="{{ video.length }}"
                            >
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-outline-danger btn-sm ms-1" onclick="showDeleteVideoModal({{ video.id }}, '{{ video.name|e('js') }}')">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                {% endfor %}
            {% else %}
                <div class="text-muted">Keine Videos für dieses Spiel.</div>
            {% endif %}
        </div>
    </div>

    {# Video Modal #}
    <div class="modal fade" id="videoModal" tabindex="-1" aria-labelledby="videoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="videoForm" method="post" action="{{ path('videos_save', {gameId: game.id}) }}">
                    <div class="modal-header">
                        <h5 class="modal-title" id="videoModalLabel">Video bearbeiten</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="video_id" id="video_id">
                        <div class="mb-3">
                            <label for="video_name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="video_name" name="name" required>
                        </div>
                        <div class="col-12">
                            <select class="form-select" name="videoType" id="video_type" required>
                                <option value="">Video-Typ wählen…</option>
                                {% for type in videoTypes %}
                                <option value="{{ type.id }}" data-name="{{ type.name }}" data-sort="{{ type.sort }}">{{ type.name }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="col-12">
                            <select class="form-select" name="camera" id="video_camera" required>
                                <option value="">Kamera wählen…</option>
                                {% for camera in cameras %}
                                <option value="{{ camera.id }}" data-name="{{ camera.name }}">{{ camera.name }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="video_url" class="form-label">YouTube URL</label>
                            <input type="url" class="form-control" id="video_url" name="url" required>
                        </div>
                        <div class="mb-3">
                            <label for="video_sort" class="form-label">Sortierung</label>
                            <input type="number" class="form-control" id="video_sort" name="sort" min="0">
                        </div>
                        <div class="mb-3">
                            <label for="video_filePath" class="form-label">Dateipfad (optional)</label>
                            <input type="text" class="form-control" id="video_filePath" name="filePath">
                        </div>
                        <div class="mb-3">
                            <label for="video_gameStart" class="form-label">Startzeit im Video (Sekunden, optional)</label>
                            <input type="number" class="form-control" id="video_gameStart" name="gameStart" min="0">
                        </div>
                        <div class="mb-3">
                            <label for="video_length" class="form-label">Länge des Videos (Sekunden, optional)</label>
                            <input type="number" class="form-control" id="video_length" name="length" min="0">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Abbrechen</button>
                        <button type="submit" class="btn btn-primary">Speichern</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

{# Delete Confirmation Modal #}
<div class="modal fade" id="deleteVideoModal" tabindex="-1" aria-labelledby="deleteVideoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteVideoModalLabel">Video löschen</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Soll das Video <strong id="deleteVideoName"></strong> wirklich gelöscht werden?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Abbrechen</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteVideoBtn">Löschen</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
    let deleteVideoId = null;
    function showDeleteVideoModal(id, name) {
        deleteVideoId = id;
        document.getElementById('deleteVideoName').textContent = name;
        var modal = new bootstrap.Modal(document.getElementById('deleteVideoModal'));
        modal.show();
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Delete Confirm Button
        document.getElementById('confirmDeleteVideoBtn').addEventListener('click', function() {
            if (!deleteVideoId) return;
            fetch(`{{ path('videos_delete', {id: 'VIDEO_ID'}) }}`.replace('VIDEO_ID', deleteVideoId), {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `_token={{ csrf_token('delete' ~ 'VIDEO_ID') }}`.replace('VIDEO_ID', deleteVideoId)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Entferne Video-Block aus DOM
                    document.querySelectorAll('.video-block').forEach(function(block) {
                        var editBtn = block.querySelector('.edit-video-btn');
                        if (editBtn && editBtn.getAttribute('data-video-id') == deleteVideoId) {
                            block.remove();
                        }
                    });
                    bootstrap.Modal.getInstance(document.getElementById('deleteVideoModal')).hide();
                } else {
                    alert(data.error || 'Fehler beim Löschen des Videos.');
                }
            })
            .catch(() => {
                alert('Fehler beim Löschen des Videos.');
            });
        });

        var videoModal = document.getElementById('videoModal');
        var videoForm = document.getElementById('videoForm');
        var videoIdInput = document.getElementById('video_id');
        var videoNameInput = document.getElementById('video_name');
        var videoUrlInput = document.getElementById('video_url');
        var videoFilePathInput = document.getElementById('video_filePath');
        var videoGameStartInput = document.getElementById('video_gameStart');
        var videoSortInput = document.getElementById('video_sort');
        var videoLengthInput = document.getElementById('video_length');
        var videoTypeInput = document.getElementById('video_type');
        var videoCameraInput = document.getElementById('video_camera');

        // Register modal explicitly (optional, falls nicht automatisch)
        if (window.modalManager && !window.modalManager.registeredModals.has('videoModal')) {
            window.modalManager.registerModal('videoModal', videoModal);
        }

        // Add Video Button
        document.getElementById('addVideoBtn').addEventListener('click', function() {
            videoForm.action = '{{ path('videos_save', {gameId: game.id}) }}';
            videoIdInput.value = '';
            videoNameInput.value = '';
            videoUrlInput.value = '';
            videoFilePathInput.value = '';
            videoGameStartInput.value = '';
            videoSortInput.value = '';
            videoLengthInput.value = '';
            videoTypeInput.value = '';
            videoCameraInput.value = '';
            document.getElementById('videoModalLabel').textContent = 'Video hinzufügen';
            if (window.modalManager) window.modalManager.showModal('videoModal');
        });

        // Edit Video Buttons
        document.querySelectorAll('.edit-video-btn').forEach(function(btn) {
            btn.addEventListener('click', function() {
                videoForm.action = '{{ path('videos_save', {gameId: game.id}) }}';
                videoIdInput.value = btn.getAttribute('data-video-id');
                videoNameInput.value = btn.getAttribute('data-video-name');
                videoUrlInput.value = btn.getAttribute('data-video-url');
                videoFilePathInput.value = btn.getAttribute('data-video-file-path') || '';
                videoGameStartInput.value = btn.getAttribute('data-video-game-start') || '';
                videoSortInput.value = btn.getAttribute('data-video-sort') || '';
                videoLengthInput.value = btn.getAttribute('data-video-length') || '';
                videoTypeInput.value = btn.getAttribute('data-video-type') || '';
                videoCameraInput.value = btn.getAttribute('data-video-camera') || '';
                document.getElementById('videoModalLabel').textContent = 'Video bearbeiten';
                if (window.modalManager) window.modalManager.showModal('videoModal');
            });
        });

        // AJAX Submit für Video-Formular
        videoForm.addEventListener('submit', function(e) {
            e.preventDefault();
            var formData = new FormData(videoForm);
            fetch(videoForm.action, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    if (window.modalManager) window.modalManager.hideModal('videoModal');
                    updateVideoList(data.video);
                } else {
                    alert(data.error || 'Fehler beim Speichern des Videos.');
                }
            })
            .catch(() => {
                alert('Fehler beim Speichern des Videos.');
            });
        });

        function loadVideoList() {
            fetch('{{ path('videos_list', {gameId: game.id}) }}')
            .then(response => response.json())
            .then(
                data => {
                    if (data.videos) {
                        data.videos.forEach(video => {
                            updateVideoList(video);
                        });
                    }
                }
            );
        }

        // Video-Liste dynamisch aktualisieren
        function updateVideoList(video) {
            // Suche nach bestehendem Video-Block
            var videoBlocks = document.querySelectorAll('.video-block');
            var found = false;
            videoBlocks.forEach(function(block) {
                var editBtn = block.querySelector('.edit-video-btn');
                if (editBtn && editBtn.getAttribute('data-video-id') == video.id) {
                    // Update bestehendes Video
                    block.querySelector('strong').textContent = video.name;
                    block.querySelector('.text-muted.small').textContent = video.url;
                    block.querySelector('a').href = 'https://www.youtube.com/watch?v=' + video.youtubeId;
                    block.querySelector('img').src = 'https://img.youtube.com/vi/' + video.youtubeId + '/hqdefault.jpg';
                    editBtn.setAttribute('data-video-name', video.name);
                    editBtn.setAttribute('data-video-url', video.url);
                    editBtn.setAttribute('data-video-filepath', video.filePath || '');
                    editBtn.setAttribute('data-video-gamestart', video.gameStart || '');
                    editBtn.setAttribute('data-video-sort', video.sort || '');
                    found = true;
                }
            });
            
            if (!found) {
                // Neues Video einfügen
                var cardBody = document.getElementById('videos_list');
                var div = document.createElement('div');
                div.className = 'video-block mb-4 d-flex align-items-center';
                div.innerHTML = `
                    <a href="https://www.youtube.com/watch?v=${video.youtubeId}" target="_blank">
                        <img src="https://img.youtube.com/vi/${video.youtubeId}/hqdefault.jpg" alt="Video Thumbnail" class="img-fluid me-3" style="max-width: 120px;">
                    </a>
                    <div class="flex-grow-1">
                        <div><strong>${video.name}</strong></div>
                        <div class="text-muted small">${video.url}</div>
                    </div>
                    <button class="btn btn-outline-secondary btn-sm ms-2 edit-video-btn" data-video-id="${video.id}" data-video-name="${video.name}" data-video-url="${video.url}" data-video-filepath="${video.filePath || ''}" data-video-gamestart="${video.gameStart || ''}">
                        <i class="fas fa-edit"></i>
                    </button>
                    <form method="post" action="{{ path('videos_delete', {id: 'VIDEO_ID'}) }}" class="d-inline ms-1" onsubmit="return confirm('Wirklich löschen?');">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ 'VIDEO_ID') }}">
                        <button class="btn btn-outline-danger btn-sm" type="submit"><i class="fas fa-trash"></i></button>
                    </form>
                `.replace(/VIDEO_ID/g, video.id);
                cardBody.appendChild(div);
                // Edit-Button-Handler neu binden
                var newEditBtn = div.querySelector('.edit-video-btn');
                newEditBtn.addEventListener('click', function() {
                    videoForm.action = '{{ path('videos_save', {gameId: game.id}) }}';
                    videoIdInput.value = video.id;
                    videoNameInput.value = video.name;
                    videoUrlInput.value = video.url;
                    videoFilePathInput.value = video.filePath || '';
                    videoGameStartInput.value = video.gameStart || '';
                    document.getElementById('videoModalLabel').textContent = 'Video bearbeiten';
                    if (window.modalManager) window.modalManager.showModal('videoModal');
                });
            }
        }
    });
    </script>
{% endblock %}
