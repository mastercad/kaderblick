{# templates/formation/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Teamaufstellungen{% endblock %}

{% block body %}
<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Meine Teamaufstellungen</h1>
        <a href="{{ path('formation_new') }}" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Neue Aufstellung
        </a>
    </div>

    {% if formations|length > 0 %}
        <div class="row">
            {% for formation in formations %}
                <div class="col-12 col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">{{ formation.name }}</h5>
                            <span class="badge bg-secondary">{{ formation.formationType.name|capitalize }}</span>
                        </div>
                        <div class="card-body">
                            <div class="formation-preview formation-background sports-field {{ formation.formationType.cssClass|default('field-default') }} mb-3"
                                 {% if formation.formationType.backgroundPath %}
                                 style="background-image: url('/images/formation/{{ formation.formationType.backgroundPath }}');"
                                 data-background-image="{{ formation.formationType.backgroundPath }}"
                                 {% else %}
                                 style="background-image: url('/images/formation/fussballfeld_haelfte.jpg');"
                                 data-background-image="fussballfeld_haelfte.jpg"
                                 {% endif %}>
                                {% for player in formation.formationData.players|default([]) %}
                                    <div class="formation-player position-dynamic" style="left: {{ player.x }}%; top: {{ player.y }}%;">
                                        {{ player.number }}
                                    </div>
                                {% endfor %}
                            </div>
                            <p class="text-muted small mb-2">Aufstellung: {{ formation.formationData.code|default('Kein Code') }}</p>
                        </div>
                        <div class="card-footer bg-transparent">
                            <a href="{{ path('formation_edit', {'id': formation.id}) }}" class="btn btn-sm btn-outline-primary">
                                Bearbeiten
                            </a>
                            {# Hier können Sie später einen Löschen-Button hinzufügen #}
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    {% else %}
        <div class="alert alert-info">
            Sie haben noch keine Aufstellungen erstellt. 
            <a href="{{ path('formation_new') }}" class="alert-link">Erstellen Sie jetzt Ihre erste Aufstellung</a>.
        </div>
    {% endif %}
</div>

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Proportionen für alle Formation-Previews anpassen
            function adjustPreviewProportions() {
                const previews = document.querySelectorAll('.formation-preview');
                previews.forEach(preview => {
                    const backgroundImage = preview.dataset.backgroundImage;
                    if (backgroundImage) {
                        const img = new Image();
                        img.onload = function() {
                            const aspectRatio = this.width / this.height;
                            const cardWidth = preview.closest('.card-body').offsetWidth;
                            const maxHeight = 180; // Begrenzte Höhe für kompakte Cards
                            
                            // Breite basierend auf verfügbarem Platz, aber Höhe begrenzen
                            let width = cardWidth;
                            let height = width / aspectRatio;
                            
                            // Wenn zu hoch, dann Höhe begrenzen und Breite anpassen
                            if (height > maxHeight) {
                                height = maxHeight;
                                width = height * aspectRatio;
                            }
                            
                            preview.style.width = width + 'px';
                            preview.style.height = height + 'px';
                            preview.style.backgroundSize = 'cover';
                            preview.style.backgroundPosition = 'center';
                            preview.style.backgroundRepeat = 'no-repeat';
                            preview.style.margin = '0 auto'; // Zentrieren wenn schmaler als Card
                        };
                        img.src = `/images/formation/${backgroundImage}`;
                    }
                });
            }
            
            // Proportionen beim Laden und bei Resize anpassen
            adjustPreviewProportions();
            window.addEventListener('resize', adjustPreviewProportions);
        });
    </script>
{% endblock %}
{% endblock %}